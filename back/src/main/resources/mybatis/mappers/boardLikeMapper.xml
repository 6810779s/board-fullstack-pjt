<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.pjt.back.mapper.BoardLikeMapper">
    <select id="selectAll" resultType="BoardLikeResponseDto">
        SELECT *
        FROM article_like
    </select>
    <select id="select" parameterType="int" resultType="ArticleLikeDto">
        SELECT *
        FROM article_like
        WHERE article_like_id = #{article_like_id}
    </select>
    <resultMap id="BoardLikeResponseDtoMap" type="BoardLikeResponseDto">
        <id property="article_like_id" column="article_like_id"/>
        <result property="created_by" column="created_by"/>
        <result property="created_at" column="created_at"/>
        <association property="board" javaType="BoardLikeBoardInfo">
            <id property="article_id" column="article_id"/>
            <result property="title" column="title"/>
            <result property="created_by" column="created_by"/>
            <result property="created_at" column="created_at"/>
        </association>
    </resultMap>
    <select id="selectMyBoardLikeList" parameterType="UserEntity" resultMap="BoardLikeResponseDtoMap">
        SELECT al.article_like_id,
               al.created_by,
               al.created_at,
               a.article_id,
               a.title,
               a.created_at,
               a.created_by
        FROM article_like al
                 JOIN article a
                      ON al.article_id = a.article_id
        WHERE al.created_by = #{email}
        ORDER BY al.created_at DESC
    </select>
    <select id="findByBoardLikeId" parameterType="int" resultType="BoardLikeResponseDto">
        SELECT *
        FROM article_like
        WHERE article_id = #{article_id}
    </select>
    <delete id="delete" parameterType="BoardToggleLikeRequestDto">
        DELETE
        FROM article_like
        WHERE created_by = #{created_by}
    </delete>
    <insert id="insert" parameterType="BoardToggleLikeRequestDto">
        INSERT INTO article_like
            (article_id, created_at, created_by)
        VALUES (#{article_id}, now(), #{created_by})
    </insert>
</mapper>