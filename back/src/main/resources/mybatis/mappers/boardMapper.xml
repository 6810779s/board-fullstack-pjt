<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board.pjt.back.mapper.BoardMapper">

    <select id="selectAll" resultType="BoardResponseDto">
        SELECT *
        FROM article
        ORDER BY article_id DESC
    </select>
    <resultMap id="BoardDetailMap" type="BoardDetailResponseDto">
        <id property="article_id" column="article_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="created_by" column="created_by"/>
        <result property="created_at" column="created_at"/>
        <association property="category" javaType="CategorySelectResponseDto">
            <id property="category_id" column="category_id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <select id="select" parameterType="int" resultMap="BoardDetailMap">
        SELECT a.article_id,
               a.title,
               a.content,
               a.content,
               a.created_by,
               a.created_at,
               c.category_id,
               c.name
        FROM article a
                 JOIN category c
                      ON a.category_id = c.category_id
        WHERE a.article_id = #{article_id}
    </select>
    <select id="getPrevArticle" resultType="BoardDetailResponseDto">
        SELECT *
        FROM article
        WHERE article_id &lt; #{article_id}
        ORDER BY article_id DESC LIMIT 1
    </select>
    <select id="getNextArticle" resultType="BoardDetailResponseDto">
        SELECT *
        FROM article
        WHERE article_id &gt; #{article_id}
        ORDER BY article_id ASC LIMIT 1
    </select>
    <select id="selectMyBoardList" parameterType="UserEntity" resultType="BoardResponseDto">
        SELECT *
        FROM article
        WHERE created_by = #{email}
        ORDER BY created_at DESC
    </select>
    <insert id="insert" parameterType="BoardCreateRequestDto">
        INSERT INTO article
        (title, content, category_id, created_at, created_by, updated_at, updated_by)
        VALUES (#{title}, #{content}, #{category_id}, now(), 'test@naver.com', null,
                null)
    </insert>
    <insert id="delete" parameterType="int">
        DELETE
        FROM article
        WHERE article_id = #{article_id}
    </insert>
    <update id="update" parameterType="BoardUpdateRequestDto">
        UPDATE article
        SET title       = #{title},
            content     = #{content},
            category_id = #{category_id},
            updated_at  = now(),
            updated_by  = 'test@naver.com'
        WHERE article_id = #{article_id}
    </update>

</mapper>
